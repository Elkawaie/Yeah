<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {% block stylesheets %}
            <link href="{{asset('assets/vendor/bootstrap/css/bootstrap.min.css')}}" rel="stylesheet">
            <link href="{{asset('assets/vendor/font-awesome/css/font-awesome.min.css')}}" rel="stylesheet" type="text/css">
            <link href="{{asset('assets/vendor/datatables/dataTables.bootstrap4.css')}}" rel="stylesheet">
            <link href="{{asset('assets/css/sb-admin.css')}}" rel="stylesheet">

            <link href="{{asset('assets/css/bootstrap-grid.css')}}" rel='stylesheet'/>
            <link href="{{asset('assets/css/bootstrap.css')}}" rel='stylesheet'/>
            <link href="{{asset('assets/css/main.css')}}" rel='stylesheet'/>
        {% endblock %}
    </head>
    <body>
    {% block body %}{% endblock %}

</body>

</html>
{% block javascripts %}
    <!-- Bootstrap core JavaScript-->
    <script src="{{asset('assets/vendor/jquery/jquery.min.js')}}"></script>
    <script src="{{asset('assets/vendor/bootstrap/js/bootstrap.bundle.min.js')}}"></script>
    <!-- Core plugin JavaScript-->
    <script src="{{asset('assets/vendor/jquery-easing/jquery.easing.min.js')}}"></script>
    <script type="text/javascript" src="http://api.geonames.org/export/geonamesData.js?username=elkawaie"></script>
    <script type="text/javascript" src="{{ asset('assets/js/jsr_class.js')}}"></script>
    <script>

        var pass = document.getElementById('user_password_first');
        var aidePass = document.getElementById('aide2');
        var cara = document.getElementById('cara');
        var chiffre = document.getElementById('chiffre');
        var maj = document.getElementById('maj');
        var caraSpec = document.getElementById('caraSpec');


        var checkCara = (param) => {
            control = RegExp(/\w{8,}/);
            //console.log(param.match(control));
            //console.log(control.test(param));
            return control.test(param);
        };

        var checkNum = (param) => {
            control = RegExp(/\d{1,}/);
            // console.log(param.match(control));
            //console.log(control.test(param));
            return control.test(param);
        };

        var checkcaraSpec = (param) => {
            control = RegExp(/[\[\]&"'(\-\/\.)=+?$^*!:;,]/);
            //console.log(param.match(control));
            //console.log(control.test(param));
            return control.test(param);
        };

        var checkMaj = (param) => {
            control = RegExp(/[A-Z]/);
            // console.log(param.match(control));
            //console.log(control.test(param));
            return control.test(param);
        };





        pass.addEventListener('focus', function () {
            aidePass.style.visibility = 'visible';

        });

        pass.addEventListener('keyup', function () {

            var cc = checkCara(pass.value);
            var ccs = checkcaraSpec(pass.value);
            var cm = checkMaj(pass.value);
            var cn = checkNum(pass.value);

            if (cc && ccs && cm && cn) {
                cara.style.color = 'green';
                caraSpec.style.color = 'green';
                chiffre.style.color = 'green';
                maj.style.color = 'green';

            }
            console.log('toto');

        });
    </script>
    <script type="text/javascript" >
// postalcodes is filled by the JSON callback and used by the mouse event handlers of the suggest box
        var postalcodes;

// this function will be called by our JSON callback
// the parameter jData will contain an array with postalcode objects
        function getLocation(jData) {
            if (jData == null) {
                // There was a problem parsing search results
                return;
            }

            // save place array in 'postalcodes' to make it accessible from mouse event handlers
            postalcodes = jData.postalcodes;

            if (postalcodes.length > 1) {
                // we got several places for the postalcode
                // make suggest box visible
                document.getElementById('suggestBoxElement').style.visibility = 'visible';
                var suggestBoxHTML = '';
                // iterate over places and build suggest box content
                for (i = 0; i < jData.postalcodes.length; i++) {
                    // for every postalcode record we create a html div 
                    // each div gets an id using the array index for later retrieval 
                    // define mouse event handlers to highlight places on mouseover
                    // and to select a place on click
                    // all events receive the postalcode array index as input parameter
                    suggestBoxHTML += "<div class='suggestions' id=pcId" + i + " onmousedown='suggestBoxMouseDown(" + i + ")' onmouseover='suggestBoxMouseOver(" + i + ")' onmouseout='suggestBoxMouseOut(" + i + ")'> " + postalcodes[i].countryCode + ' ' + postalcodes[i].postalcode + '    ' + postalcodes[i].placeName + '</div>';
                }
                // display suggest box
                document.getElementById('suggestBoxElement').innerHTML = suggestBoxHTML;
            } else {
                if (postalcodes.length == 1) {
                    // exactly one place for postalcode
                    // directly fill the form, no suggest box required 
                    var placeInput = document.getElementById("clients_Ville");

                    placeInput.value = postalcodes[0].placeName;
                }
                closeSuggestBox();
            }
        }


        function closeSuggestBox() {
            document.getElementById('suggestBoxElement').innerHTML = '';
            document.getElementById('suggestBoxElement').style.visibility = 'hidden';
        }


// remove highlight on mouse out event
        function suggestBoxMouseOut(obj) {
            document.getElementById('pcId' + obj).className = 'suggestions';
        }

// the user has selected a place name from the suggest box
        function suggestBoxMouseDown(obj) {
            closeSuggestBox();
            var placeInput = document.getElementById("placeInput");
            placeInput.value = postalcodes[obj].placeName;
        }

// function to highlight places on mouse over event
        function suggestBoxMouseOver(obj) {
            document.getElementById('pcId' + obj).className = 'suggestionMouseOver';
        }


// this function is called when the user leaves the postal code input field
// it call the geonames.org JSON webservice to fetch an array of places 
// for the given postal code 
        function postalCodeLookup() {

            var country = document.getElementById("countrySelect").value;

            if (geonamesPostalCodeCountries.toString().search(country) == -1) {
                return; // selected country not supported by geonames
            }
            // display 'loading' in suggest box
            document.getElementById('suggestBoxElement').style.visibility = 'visible';
            document.getElementById('suggestBoxElement').innerHTML = '<small><i>loading ...</i></small>';

            var postalcode = document.getElementById("clients_CodePostal").value;

            request = 'http://api.geonames.org/postalCodeLookupJSON?postalcode=' + postalcode + '&country=' + country + '&callback=getLocation&username=elkawaie';

            // Create a new script object
            aObj = new JSONscriptRequest(request);
            // Build the script tag
            aObj.buildScriptTag();
            // Execute (add) the script tag
            aObj.addScriptTag();
        }

// set the country of the user's ip (included in geonamesData.js) as selected country 
// in the country select box of the address form
        function setDefaultCountry() {
            var countrySelect = document.getElementById("countrySelect");
            for (i = 0; i < countrySelect.length; i++) {
                // the javascript geonamesData.js contains the countrycode
                // of the userIp in the variable 'geonamesUserIpCountryCode'
                if (countrySelect[i].value == geonamesUserIpCountryCode) {
                    // set the country selectionfield
                    countrySelect.selectedIndex = i;
                }
            }
        }
    </script>
{% endblock %}
